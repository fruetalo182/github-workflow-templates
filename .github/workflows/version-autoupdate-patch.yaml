name: Versioning

on:
  workflow_call:
    outputs:
      version:
        description: 'The new version'
        value: ${{ jobs.versioning.outputs.new_version }}

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.versioning.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get and Increment Version
        id: versioning
        run: |
            # Si el archivo VERSION no existe, crear uno
            if [ ! -f VERSION ]; then
              echo "0.1.0" > VERSION
            fi

            # Leer la versión actual
            current_version=$(cat VERSION)
            echo "Current version: $current_version"

            # Separar en partes major, minor, patch
            IFS='.' read -r major minor patch <<< "$current_version"
            
            # Incrementar el patch
            new_patch=$((patch + 1))
            new_version="$major.$minor.$new_patch"
            echo "New version: $new_version"

            # Guardar la nueva versión en el archivo VERSION
            echo $new_version > VERSION

            # Exportar la nueva versión como un output para usar en los siguientes pasos
            echo "version=$new_version" >> $GITHUB_OUTPUT
            
      - name: Commit and push updated version
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"
          git add VERSION
          git commit -m "Increment version to ${{ steps.versioning.outputs.version }}"
          git push